<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>系统重装后优化设置和常用应用</title>
      <link href="/2020/03/28/settings-after-install-system/"/>
      <url>/2020/03/28/settings-after-install-system/</url>
      
        <content type="html"><![CDATA[<p>系统重装后，优化设置和常用应用安装。</p><a id="more"></a> <ol><li><p>系统激活。</p><p>TPYNC-4J6KF-4B4GP-2HD89-7XMP6</p></li><li><p>应用安装位置。</p><p>1、打开注册表编辑器，win + R， 输入regedit。</p><p>2、找到注册表项HKEY_LOCAL_MACHINE/SOFTWARE/Microsoft/Windows/CurrentVersion</p><p>3、在右侧你可以找到数值名称为ProgramFilesDir的项目，里面的默认数值数据为“C:Program Files”，将这个值修改为你所需要设定的路径，比如“D:/SoftWare”，然后确定，退出注册表编辑器。</p><p>更改应用安装位置后，只有新应用会被安装到新位置，已安装应用不会被自动转移。</p></li><li><p>桌面位置移动</p><p>1、我们打开“<strong>此电脑</strong>”，在左侧栏中，<strong>右键“桌面”选项，点击“属性”</strong>。</p><p>2、在弹出的桌面属性中，选择“<strong>位置</strong>”选项卡，我们可以发现其默认位置是在<strong>C:\Users\用户名\Desktop</strong>目录。</p><p>3、如果我们需要修改到非系统盘，只需要点击“<strong>移动</strong>”按钮，<strong>在弹出的对话框内选择一个你想设置的磁盘文件夹位置</strong>，如”D:/Desktop”，点击“是”即可。</p></li><li><p>常用应用</p><ul><li><p>clover</p></li><li><p>everything</p></li><li><p>notepad++</p></li><li><p>snipaste</p></li><li><p>typora</p></li><li><p>beyond compare</p></li><li><p>chrome</p></li><li><p>git</p></li><li><p>sogo</p></li><li><p>…</p></li></ul></li><li><p>工作环境</p><ul><li>JDK</li><li>Android</li><li>SDK</li><li>git</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Win10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>computer-fix</title>
      <link href="/2020/03/28/computer-fix/"/>
      <url>/2020/03/28/computer-fix/</url>
      
        <content type="html"><![CDATA[<p>电脑挂掉了~</p><p>排查 !</p><p>解决 !</p><a id="more"></a> <p>​    2020年1月15号晚上电脑在运行中，忽然挂掉，然后再也点不亮了。主板灯亮着，电源风扇不转。由于时间原因没有仔细排查，16号上班，17号春节回家。然后爆发了新型冠状病毒肺炎，老家封城，到2020年3月25号，才返回深圳。</p><p>排查:</p><ol><li><p>主板上故障灯没有亮</p></li><li><p>还是把内存条拆卸重装，无效</p></li><li><p>电源短接，电源风扇转起来，电源故障排除</p></li><li><p>显卡拆除重装，无效</p></li><li><p>cmos电池拆下，放电重装，可以点亮</p></li><li><p>直接进了BIOS，无系统启动项… 固态挂了?</p></li><li><p>好在有一个U盘，用i tell you 和软碟通制作一个系统盘</p></li><li><p>重装，额，32位…</p></li><li><p>重新制作64位系统盘</p></li><li><p>安装系统时，出错了!!! 只能擦除磁盘，GG ，机械硬盘上的东西全没了</p></li><li><p>重装完毕！满血复活~</p></li><li><p>没有完！第二次开机，固态又识别出来了，进了以前的系统，可惜机械上东西已经没了</p></li><li><p>第三次开机，固态又识别不到了，进了重装的系统</p></li><li><p>拆机，重装固态，还是不行。只能放弃治疗，先用机械硬盘凑合着用，等疫情结束买个固态再重装一次。</p></li></ol><p>总结：固态出问题了，导致无法启动系统。</p>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 装机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android Studio中常用插件</title>
      <link href="/2020/03/28/plugin-for-as/"/>
      <url>/2020/03/28/plugin-for-as/</url>
      
        <content type="html"><![CDATA[<p>Android Studio常用插件</p><a id="more"></a> <p>GsonFormat</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件 </tag>
            
            <tag> Android Studio </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用mermaid画架构图</title>
      <link href="/2020/03/28/mermaid/"/>
      <url>/2020/03/28/mermaid/</url>
      
        <content type="html"><![CDATA[<p>架构图</p><p>用代码画!</p><a id="more"></a> <h1 id="flowchart"><a href="#flowchart" class="headerlink" title="flowchart"></a>flowchart</h1><pre><code class="mermaid">graph TD;    A--&gt;B;    A--&gt;C;    B--&gt;D;    C--&gt;D;</code></pre><pre><code class="mermaid">graph TB    c1--&gt;a2    subgraph one    a1--&gt;a2    end    subgraph two    b1--&gt;b2    end    subgraph three    c1--&gt;c2    end</code></pre><h1 id="Sequence-diagrams"><a href="#Sequence-diagrams" class="headerlink" title="Sequence diagrams"></a>Sequence diagrams</h1><pre><code class="mermaid">sequenceDiagram    participant Alice    participant Bob    Alice-&gt;&gt;John: Hello John, how are you?    loop Healthcheck        John-&gt;&gt;John: Fight against hypochondria    end    Note right of John: Rational thoughts &lt;br/&gt;prevail!    John--&gt;&gt;Alice: Great!    John-&gt;&gt;Bob: How about you?    Bob--&gt;&gt;John: Jolly good!</code></pre><h1 id="Class-diagrams"><a href="#Class-diagrams" class="headerlink" title="Class diagrams"></a>Class diagrams</h1><pre><code class="mermaid">classDiagram     Animal &lt;|-- Duck     Animal &lt;|-- Fish     Animal &lt;|-- Zebra     Animal : +int age     Animal : +String gender     Animal: +isMammal()     Animal: +mate()     class Duck{         +String beakColor         +swim()         +quack()     }     class Fish{         -int sizeInFeet         -canEat()     }     class Zebra{         +bool is_wild         +run()     }     </code></pre><h1 id="State-diagrams"><a href="#State-diagrams" class="headerlink" title="State diagrams"></a>State diagrams</h1><pre><code class="mermaid">stateDiagram       [*] --&gt; Active       state Active {           [*] --&gt; NumLockOff           NumLockOff --&gt; NumLockOn : EvNumLockPressed           NumLockOn --&gt; NumLockOff : EvNumLockPressed           --           [*] --&gt; CapsLockOff           CapsLockOff --&gt; CapsLockOn : EvCapsLockPressed           CapsLockOn --&gt; CapsLockOff : EvCapsLockPressed           --           [*] --&gt; ScrollLockOff           ScrollLockOff --&gt; ScrollLockOn : EvCapsLockPressed           ScrollLockOn --&gt; ScrollLockOff : EvCapsLockPressed       }</code></pre><h1 id="Gantt-diagrams"><a href="#Gantt-diagrams" class="headerlink" title="Gantt diagrams"></a>Gantt diagrams</h1><pre><code class="mermaid">gantt       dateFormat  YYYY-MM-DD       title Adding GANTT diagram functionality to mermaid       section A section       Completed task            :done,    des1, 2014-01-06,2014-01-08       Active task               :active,  des2, 2014-01-09, 3d       Future task               :         des3, after des2, 5d       Future task2              :         des4, after des3, 5d       section Critical tasks       Completed task in the critical line :crit, done, 2014-01-06,24h       Implement parser and jison          :crit, done, after des1, 2d       Create tests for parser             :crit, active, 3d       Future task in critical line        :crit, 5d       Create tests for renderer           :2d       Add to mermaid                      :1d       section Documentation       Describe gantt syntax               :active, a1, after des1, 3d       Add gantt diagram to demo page      :after a1  , 20h       Add another diagram to demo page    :doc1, after a1  , 48h       section Last section       Describe gantt syntax               :after doc1, 3d       Add gantt diagram to demo page      :20h       Add another diagram to demo page    :48h</code></pre><h1 id="Pie-chart-diagrams"><a href="#Pie-chart-diagrams" class="headerlink" title="Pie chart diagrams"></a>Pie chart diagrams</h1><pre><code class="mermaid">pie    &quot;Dogs&quot; : 386    &quot;Cats&quot; : 85    &quot;Rats&quot; : 15</code></pre>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> 图表 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 架构 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+GitHub搭建博客网站</title>
      <link href="/2020/03/28/hexo-github-blog/"/>
      <url>/2020/03/28/hexo-github-blog/</url>
      
        <content type="html"><![CDATA[<p>利用Hexo+GitHub搭建博客网站</p><p>小窝~</p><p>​    积累~</p><p>​        分享~</p><p>​            个人站~</p><a id="more"></a> <h1 id="系统环境配置："><a href="#系统环境配置：" class="headerlink" title="系统环境配置："></a>系统环境配置：</h1><blockquote><p>Hexo+Nodejs+Git</p></blockquote><ol><li><p>安装 node.js</p><p>node -v 版本信息</p></li><li><p>安装 git<br> git –version 版本信息</p></li><li><p>注册 github账号</p></li></ol><h1 id="git-连接github配置："><a href="#git-连接github配置：" class="headerlink" title="git 连接github配置："></a>git 连接github配置：</h1><ol><li>配置SSH key:<pre><code> ssh-keygen -t rsa -C &quot;邮件地址&quot;</code></pre></li><li>测试是否成功:<pre><code>ssh -T git@github.com  # 注意邮箱地址不用改</code></pre></li><li>github配置:<pre><code>git config --global user.name &quot;hadoopBeginner&quot; #你的github用户名，非昵称git config --global user.email &quot;xxx@qq.com&quot; #填写你的github注册邮箱</code></pre></li></ol><h1 id="搭建个人博客"><a href="#搭建个人博客" class="headerlink" title="搭建个人博客"></a>搭建个人博客</h1><p>安装 hexo：</p><ol><li><p>安装淘宝源的cnpm<br>选装cnpm。由于npm速度有时候令人堪忧，所以建议安装淘宝源的cnpm，在git bash中输入</p><pre><code> alias cnpm=&quot;npm --registry=https://registry.npm.taobao.org \ --cache=$HOME/.npm/.cache/cnpm \ --disturl=https://npm.taobao.org/dist \ --userconfig=$HOME/.cnpmrc&quot;</code></pre><p>安装完之后验证，输入：cnpm info express,若出现一大堆信息则表明成功了。</p></li><li><p>安装 hexo 命令</p><pre><code> cnpm install -g hexo</code></pre><p>在这里会有 一段时间等待，请稍等</p></li><li><p>安装个人博客<br>进入到 你本地的博客存放路径，例如 F:\hexo\blog</p></li></ol><pre><code>    // 进入本地博客存放目录    cd f:    cd hexo/blog/    // 初始化 个人博客    hexo init #等待一段时间</code></pre><p>初始化完成以后，会自动生成目录.</p><pre><code>hexo g    // 生成静态网页hexo s    // 执行完以后，打开 http://localhost:4000/  ,查看预览效果.</code></pre><p>修改主题：<br><a href="https://github.com/yelog/hexo-theme-3-hexo">https://github.com/yelog/hexo-theme-3-hexo</a></p><p>下载主题：</p><pre><code>    hexo clean    git clone https://github.com/yelog/hexo-theme-3-hexo.git themes/3-hexo  </code></pre><p>修改hexo根目录的<code>_config.yml</code>，如下</p><pre><code>    theme: 3-hexo</code></pre><h1 id="部署到GitHub上："><a href="#部署到GitHub上：" class="headerlink" title="部署到GitHub上："></a>部署到GitHub上：</h1><p>修改站点目录的<code>_config.yml</code>文件，在最后添加</p><pre><code>    deploy:      type: git      repo: https://github.com/xxx/xxx.github.io.git  #填github地址      branch: master</code></pre><p>然后在命令行中执行</p><pre><code>    // 提交到github    hexo d    // 注意需要提前安装一个扩展：    cnpm install hexo-deployer-git --save</code></pre><p>到此，基本就搭建完毕。</p><h1 id="开始写作"><a href="#开始写作" class="headerlink" title="开始写作"></a>开始写作</h1><p>新建文章，输入以下命令即可</p><pre><code>    hexo new &#39;文章标题&#39;</code></pre><p>执行完成后可以在 <code>/source/_posts</code>下看到一个“文章标题.md”的文章。是 Markdown 格式的文件.</p><p>再执行一下以下命令</p><pre><code>    hexo g    hexo s</code></pre><p>可以在 <a href="http://localhost:4000">http://localhost:4000</a> 预览文章.</p><p>最后，只要部署到你的 Github 上就可以了！</p><pre><code>    hexo clean    hexo g -d</code></pre><p>部署前最好能先执行一下 hexo clean 命令，清除缓存文件 (db.json) 和已生成的静态文件 (public)。在某些情况（尤其是更换主题后），如果发现您对站点的更改无论如何也不生效，您可能需要运行该命令。</p><p>另外，如果你的文章暂时不发布可以先保存在草稿里面。生成草稿的方法和文章差不多 hexo new draft “文章标题”，生成后会在 /source/_drafts 里看到你的草稿文章。当你想发布时只要执行 publish 命令即可发布到博客。</p><pre><code>    hexo publish [layout] &lt;filename&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo添加标签和分类</title>
      <link href="/2020/03/28/hexo-categories-tags/"/>
      <url>/2020/03/28/hexo-categories-tags/</url>
      
        <content type="html"><![CDATA[<p>给博客添加上”分类”和”标签”.</p><a id="more"></a> <h4 id="1-创建“分类”选项"><a href="#1-创建“分类”选项" class="headerlink" title="1. 创建“分类”选项"></a>1. 创建“分类”选项</h4><p>生成“分类”页并添加type属性,进入博客目录。执行命令下方命令</p><pre><code>hexo new page categories</code></pre><p>categories文件夹下会有index.md这个文件，打开后默认内容是这样的：</p><pre><code>---title: categoriesdate: 2019-04-22 14:47:40---</code></pre><p>添加type: “categories”到内容中，添加后是这样的：</p><pre><code>---title: 分类date: 2019-04-24 15:30:30type: categories---</code></pre><p>保存并关闭文件。</p><p>给文章添加“categories”属性</p><p>打开需要添加分类的文章，为其添加categories属性。下方的categories:Hexo表示这篇文章添加到到“Hexo”这个分类。注意：一篇文章只会添加到一个分类中，如果是多个默认放到第一个分类中。</p><pre><code>---title: Hexo 添加分类及标签date: 2017-05-26 12:12:57categories: Hexo---</code></pre><p>至此，成功给文章添加分类，点击首页的“分类”可以看到该分类下的所有文章。当然，只有添加了categories: xxx的文章才会被收录到首页的“分类”中。</p><h4 id="2-创建“标签”选项"><a href="#2-创建“标签”选项" class="headerlink" title="2. 创建“标签”选项"></a>2. 创建“标签”选项</h4><p>生成“标签”页并添加tpye属性</p><pre><code>hexo new page tags</code></pre><p>在tags文件夹下，找到index.md这个文件，打开后默认内容是这样的：</p><pre><code>---title: 标签date: 2019-04-22 14:22:08---</code></pre><p>添加type: “tags”到内容中，添加后是这样的：</p><pre><code>---title: 标签date: 2019-04-24 15:40:24type: tags---</code></pre><p>保存并关闭文件。</p><p>给文章添加“tags”属性,打开需要添加标签的文章，为其添加tags属性。</p><pre><code>---title: Hexo 添加分类及标签date: 2019-04-24 15:40:24categories:            - Hexotags:           - 博客---</code></pre>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
